{"data":{"site":{"siteMetadata":{"title":"DailyJSX","author":"Nadun Indunil"}},"markdownRemark":{"id":"7c27efc1-9ec2-56dd-8709-809b17a673ae","html":"<h2 id=\"technologies\"><a href=\"#technologies\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technologies</h2>\n<ul>\n<li>react</li>\n<li><a href=\"https://github.com/aws/amazon-cognito-auth-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cognito-auth-js</a></li>\n</ul>\n<h2 id=\"problem\"><a href=\"#problem\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem</h2>\n<p>When your react application can not redirect to a desired route after sign in using AWS Cognito. Imagine a situation such, a user is trying to access a link of your application but he is directed to home screen(default route) not the desired link after sign in. This is because you react application cannot keep a state about the dynamic url user is trying to fetch. In my scenario our application needs to redirect to another url(Active Directory sign in) and come back to application thus made it even harder to accomplish. </p>\n<h2 id=\"solution\"><a href=\"#solution\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<p>In order to keep this state we can use cognito-auth-jsâ€™s <code class=\"language-text\">state</code> parameter.\nYou need to set your desired URL as a state, if the token is not valid or expired.\nas an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isValidToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">isValidToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// I wrapped this to function actual is : this.auth.getCachedSession().isValid()</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        auth<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> auth<span class=\"token punctuation\">.</span><span class=\"token function\">isValidToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This <code class=\"language-text\">isValidToken</code> function triggers every time a user try to access a different route(or the first hit). This library will remember this token after we sign in again and you can see it in your redirected url a parameter.\nwe can use that as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getJsonFromUrl</span><span class=\"token punctuation\">(</span>curUrl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">let</span> removeHash <span class=\"token operator\">=</span> curUrl<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\?/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   removeHash <span class=\"token operator\">=</span> removeHash<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\//g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n   removeHash<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>part<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> item <span class=\"token operator\">=</span> part<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     result<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">validateUrl</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token operator\">/</span><span class=\"token operator\">^</span>https<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span>\\<span class=\"token regex\">/\\/\\w/</span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">getJsonFormUrl</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">validateUrl</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span> <span class=\"token comment\">// this will redirect your application to the desired route.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>you should place this code in a file like <code class=\"language-text\">index.js</code>.</p>\n<p><code class=\"language-text\">getJsonFromUrl</code> -  will decode url and make it a json\n<code class=\"language-text\">validateUrl</code> - I used this function in order to find it is a url in state. so, our redirection will be a successful one. (you can improve this regex to have more than https, like first half of the domain etc.)</p>\n<h3 id=\"references\"><a href=\"#references\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<ol>\n<li><a href=\"https://github.com/aws/amazon-cognito-auth-js/issues/147\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/aws/amazon-cognito-auth-js/issues/147</a></li>\n<li><a href=\"https://github.com/aws/amazon-cognito-auth-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/aws/amazon-cognito-auth-js</a></li>\n</ol>","timeToRead":2,"frontmatter":{"title":"How to implement redirection to a dynamic route after signin with cognito-auth-js","date":"June 19, 2019","spoiler":"Redirection that everyone needs","author":"Nadun Indunil","tags":["React","AWS","Cognito"]},"fields":{"slug":"/cognito-auth-js-redirect-after-signin/","langKey":"en"}}},"pageContext":{"slug":"/cognito-auth-js-redirect-after-signin/","previous":{"fields":{"slug":"/aws-cloudformation/","langKey":"en","directoryName":"aws-cloudformation"},"frontmatter":{"title":"Introduction to AWS Cloudâ€‹Formation","tags":["AWS","CloudFormation","intro"]}},"next":{"fields":{"slug":"/antd-rescript-sass-boilerplate/","langKey":"en","directoryName":"antd-rescript-sass-boilerplate"},"frontmatter":{"title":"Ant Design Webpack override using rescript and antd-scss-theme-plugin","tags":["React","webpack","antd"]}},"translations":[],"translatedLinks":[]}}