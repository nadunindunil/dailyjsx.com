{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Panel.js","webpack:///./src/components/Footer.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-index.js","webpack:///./src/assets/profile-pic.jpg"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Panel","children","style","fontSize","border","borderRadius","padding","background","wordBreak","Footer","marginTop","rhythm","paddingTop","float","href","target","rel","to","React","Component","formatReadingTime","minutes","cups","Math","round","Array","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","Bio","display","marginBottom","src","profilePic","alt","marginRight","width","height","maxWidth","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","length","map","node","fields","key","fontFamily","boxShadow","fontStyle","dangerouslySetInnerHTML","__html","frontmatter","spoiler","timeToRead","color","author","module","exports"],"mappings":"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","file":"component---src-templates-blog-index-js-a50847086ec1c097383f.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — A blog by Nadun Indunil`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/nadmatrix\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/nadunindunil\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://stackoverflow.com/users/4525429/nadun\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          stack overflow\n        </a>\n        &bull;{' '}\n        <Link to=\"privacy-policy\">privacy policy</Link>\n        &bull;{' '}\n        <Link to=\"/about-us\">about us</Link>\n        &bull;{' '}\n        <Link to=\"/contact-us\">contact us</Link>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Nadun Indunil`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 310 }}>\n          Programming blog by{' '}\n          <a href=\"https://mobile.twitter.com/nadmatrix\">Nadun Indunil</a>.{' '}\n          Welcome to our programming journal.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Footer from '../components/Footer';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm } from '../utils/typography';\nimport Panel from '../components/Panel';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/nadunindunil/dailyjsx.com#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts &&\n            posts.length > 0 &&\n            posts.map(({ node }) => {\n              const title = get(node, 'frontmatter.title') || node.fields.slug;\n              return (\n                <article key={node.fields.slug}>\n                  <header>\n                    <h3\n                      style={{\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(1),\n                        marginBottom: rhythm(1 / 4),\n                      }}\n                    >\n                      <Link\n                        style={{ boxShadow: 'none' }}\n                        to={node.fields.slug}\n                        rel=\"bookmark\"\n                      >\n                        {title}\n                      </Link>\n                    </h3>\n                    <small\n                      style={{\n                        fontStyle: 'italic',\n                        fontSize: rhythm(0.6),\n                      }}\n                      dangerouslySetInnerHTML={{\n                        __html: node.frontmatter.spoiler,\n                      }}\n                    />\n                    <br />\n                    <small>\n                      {formatPostDate(node.frontmatter.date, 'en')}\n                      {` • ${formatReadingTime(node.timeToRead)}`}\n                    </small>\n                  </header>\n                  <h5\n                    style={{\n                      marginTop: 7,\n                      marginBottom: 3,\n                    }}\n                  >\n                    by{' '}\n                    <span style={{ color: 'rgb(255, 167, 196)' }}>\n                      {node.frontmatter.author}\n                    </span>\n                  </h5>\n                </article>\n              );\n            })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            author\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-7836e0ae0eab719db216123de0b4911f.jpg\";"],"sourceRoot":""}